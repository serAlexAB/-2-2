# Практическoе задание 2-6 : Доп Задание по модулю: "Основные операторы"
print('*************')
print()
print('Практическoе задание 2-6 : Доп Задание по модулю: "Основные операторы" - Слишком древний шифр')
print('*************')
print()

# ЗАДАНИЕ  -   "Слишком древний шифр":
# Составьте алгоритм, используя циклы, чтобы в независимости от введённого числа n (от 3 до 20)
# программа выдавала нужный пароль result, для одного введённого числа.


def Str_ (m): # Формируем список символов
    a = []
    for i in range (1, m+1):
        a.append (str(i))
    return a

def Sum_ (bb): #  Формируем состовляющие ключа
    Sum_n = []
    for i in range (0,(len(bb)-1)):
        i_n = int (bb[i])
        for ii in range(i, len(bb)-1):
            j_n = int (bb[ii+1])
            ss = i_n + j_n
            if ss == len(bb) or len(bb)%ss == 0:
                # print (i_n, j_n, ss)
                Sum_n.append (str(i_n) + str(j_n))
                # print(Sum_n)
    return Sum_n

def kluch (SS): # Формируем ключ
     Kluch_ = ''
     for i in SS :
         Kluch_  += i
     return Kluch_

# Запрос на количество составляющих ключа
n = int (input('Введите целое число от 3 до 20. n = ?: '))

# Запускаем функции на формирования ключа
b_str = (Str_(n)) # Запрос на формировани списка состовляющих символов ключа
result_sum = Sum_ (b_str) # Запрос на формировани  состовляющих ключа
result = kluch (result_sum) #Запрос на формирование ключа

# Выодим ключ на печать

print('Ключ для n =', n ,' : ', result)


